{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAGpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAG5BA,EAAM,G,CAIb,MAAMQ,EAAOC,SAASC,cAAc,SAGpCF,EAAKG,iBAAiB,UAEtB,SAAuBC,GACrBA,EAAMC,iBACN,IACEC,UAAYd,MAAAe,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cACNC,EAAaC,OAAOL,EAAMM,OAC1BC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAcH,OAAOH,EAAOI,OAChC,GAAIF,EAAa,GAAKG,EAAY,GAAKC,GAAe,EAEpD,YADAC,EAAA5B,GAAS6B,OAAOC,QAAQ,6BAG1B,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAaI,GAAK,EAAG,CAIvC7B,EAHe6B,EAAI,EACNR,EAAaG,EAAYK,GAGnCC,MAAK,EAAC7B,SAAEA,EAAQC,MAAEA,MACjBwB,EAAA5B,GAAS6B,OAAOI,QACd,uBAAqB9B,QAAiBC,MAAU,IAGnD8B,OAAM,EAAC/B,SAAEA,EAAQC,MAAEA,MAClBwB,EAAA5B,GAAS6B,OAAOM,QACd,sBAAoBhC,QAAeC,MAAU,G,KAzBvDgC,QAAQC,IAAIzB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        // Fulfill\n      } else {\n        reject({ position, delay });\n        // Reject\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\n// const button = document.querySelector('button[type=submit]');\n\nform.addEventListener('submit', causeFunktion);\nconsole.log(form);\nfunction causeFunktion(event) {\n  event.preventDefault();\n  let {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  let inputDelay = Number(delay.value);\n  let inputStep = Number(step.value);\n  let inputAmount = Number(amount.value);\n  if (inputDelay < 0 || inputStep < 0 || inputAmount <= 0) {\n    Notiflix.Notify.warning('All data mast be positive');\n    return;\n  }\n  for (let i = 0; i < inputAmount; i += 1) {\n    let position = i + 1;\n    let deleys = inputDelay + inputStep * i;\n\n    createPromise(position, deleys)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    // inputDelay += inputStep;\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$form","document","querySelector","addEventListener","event","preventDefault","elements","delay1","step","amount","currentTarget","inputDelay","Number","value","inputStep","inputAmount","$parcel$interopDefault","Notify","warning","i","then","success","catch","failure","console","log"],"version":3,"file":"03-promises.272a46e1.js.map"}